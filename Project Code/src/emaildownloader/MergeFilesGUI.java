/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emaildownloader;

import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author nicho
 */
public class MergeFilesGUI extends javax.swing.JDialog {

    /**
     * Creates new form MergeFilesGUI
     */
    
    private boolean mailChimpFile;
    private boolean remove;
    private boolean compListMailChimp;
    private Settings settings;
    private boolean mailAssigned;
    private boolean removeAssigned;
    private boolean compListAssigned;
    
    
    
    public MergeFilesGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.settings= new Settings();
        settings.SaveSetting("string", "toMerList", "");
        settings.SaveSetting("string", "comList", "");
        this.labelMergList.setForeground(Color.red);
        this.labelMergList.setText("EMPTY");
        this.labelComList.setForeground(Color.red);
        this.labelComList.setText("EMPTY");
    }
    
    private boolean checkSettings(){
        if(!this.mailAssigned || !this.removeAssigned){
            JOptionPane.showMessageDialog(null, "Choose Remove/Add and Chimp/My File");
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
            return false;
        }
        if(!this.compListAssigned){
            JOptionPane.showMessageDialog(null, "Choose Complete List Type");
            this.radioMailChimpCom.setSelected(false);
            this.radioMyCSVcomp.setSelected(false);
            return false;
        }
        if(settings.getStringValue("toMerList").length()<3){
            this.labelMergList.setForeground(Color.red);
            this.labelMergList.setText("EMPTY");
            JOptionPane.showMessageDialog(null, "Add Merge List");
            return false;
        }
        else{
            this.labelMergList.setForeground(Color.blue);
            this.labelMergList.setText("OK");
        }
        if(settings.getStringValue("comList").length()<3){
            this.labelComList.setForeground(Color.red);
            this.labelComList.setText("EMPTY");
            JOptionPane.showMessageDialog(null, "Add Complete List");
            return false;
        }
        else{
            this.labelComList.setForeground(Color.blue);
            this.labelComList.setText("OK");
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        labelComList7 = new javax.swing.JLabel();
        labelComList8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnComList = new javax.swing.JButton();
        labelComList = new javax.swing.JLabel();
        btnMergList = new javax.swing.JButton();
        labelMergList = new javax.swing.JLabel();
        labelComList1 = new javax.swing.JLabel();
        radioMailChimp = new javax.swing.JRadioButton();
        radioMyCSV = new javax.swing.JRadioButton();
        labelComList2 = new javax.swing.JLabel();
        radioRemove = new javax.swing.JRadioButton();
        radioAdd = new javax.swing.JRadioButton();
        btnStart = new javax.swing.JButton();
        labelComList3 = new javax.swing.JLabel();
        labelCountCom = new javax.swing.JLabel();
        labelComList5 = new javax.swing.JLabel();
        labelCountMer = new javax.swing.JLabel();
        labelComList9 = new javax.swing.JLabel();
        labelCounter = new javax.swing.JLabel();
        btnCleanDup = new javax.swing.JButton();
        labelComList4 = new javax.swing.JLabel();
        radioMailChimpCom = new javax.swing.JRadioButton();
        radioMyCSVcomp = new javax.swing.JRadioButton();

        labelComList7.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList7.setText("To Merge List");

        labelComList8.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelComList8.setText("000");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Merge Files");

        btnComList.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 14)); // NOI18N
        btnComList.setText("Complete List");
        btnComList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComListActionPerformed(evt);
            }
        });

        labelComList.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelComList.setText("EMPTY");

        btnMergList.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 14)); // NOI18N
        btnMergList.setText("To Merge List");
        btnMergList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergListActionPerformed(evt);
            }
        });

        labelMergList.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelMergList.setText("EMPTY");

        labelComList1.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList1.setText("Remove/Add");

        radioMailChimp.setText("Mail Chimp Export");
        radioMailChimp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMailChimpActionPerformed(evt);
            }
        });

        radioMyCSV.setText("My CSV");
        radioMyCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMyCSVActionPerformed(evt);
            }
        });

        labelComList2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList2.setText("Merge List Type");

        radioRemove.setText("Remove");
        radioRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRemoveActionPerformed(evt);
            }
        });

        radioAdd.setText("Add");
        radioAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAddActionPerformed(evt);
            }
        });

        btnStart.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 18)); // NOI18N
        btnStart.setForeground(new java.awt.Color(0, 204, 0));
        btnStart.setText("START");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        labelComList3.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList3.setText("Complete List");

        labelCountCom.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelCountCom.setText("000");

        labelComList5.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList5.setText("To Merge List");

        labelCountMer.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelCountMer.setText("000");

        labelComList9.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList9.setText("Counter");

        labelCounter.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelCounter.setText("000");

        btnCleanDup.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 14)); // NOI18N
        btnCleanDup.setForeground(new java.awt.Color(0, 51, 204));
        btnCleanDup.setText("Clean Duplicate");
        btnCleanDup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanDupActionPerformed(evt);
            }
        });

        labelComList4.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelComList4.setText("Complete List Type");

        radioMailChimpCom.setText("Mail Chimp Export");
        radioMailChimpCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMailChimpComActionPerformed(evt);
            }
        });

        radioMyCSVcomp.setText("My CSV");
        radioMyCSVcomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMyCSVcompActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelComList3)
                                    .addComponent(labelCountCom))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelComList5)
                                    .addComponent(labelCountMer))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelComList9)
                            .addComponent(labelCounter)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnComList)
                        .addGap(29, 29, 29)
                        .addComponent(labelComList))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMergList)
                        .addGap(29, 29, 29)
                        .addComponent(labelMergList)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCleanDup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnStart))
                    .addComponent(labelComList1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioRemove)
                        .addGap(80, 80, 80)
                        .addComponent(radioAdd))
                    .addComponent(labelComList4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioMailChimpCom)
                        .addGap(27, 27, 27)
                        .addComponent(radioMyCSVcomp))
                    .addComponent(labelComList2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioMailChimp)
                        .addGap(27, 27, 27)
                        .addComponent(radioMyCSV)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnComList)
                            .addComponent(labelComList))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMergList)
                            .addComponent(labelMergList)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelComList4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioMailChimpCom)
                            .addComponent(radioMyCSVcomp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelComList2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioMailChimp)
                            .addComponent(radioMyCSV))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelComList1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioRemove)
                    .addComponent(radioAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelComList3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelCountCom))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelComList5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelCountMer))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelComList9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelCounter)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnStart)
                        .addComponent(btnCleanDup)))
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnComListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComListActionPerformed
        FolderSelect fs= new FolderSelect(null, true, "comList");
        fs.setVisible(true);
        if(settings.getStringValue("comList").length()<3){
            this.labelComList.setForeground(Color.red);
            this.labelComList.setText("EMPTY");
            JOptionPane.showMessageDialog(null, "Add Complete List");
        }
        else{
            this.labelComList.setForeground(Color.blue);
            this.labelComList.setText("OK");
        }
    }//GEN-LAST:event_btnComListActionPerformed

    private void btnMergListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergListActionPerformed
        FolderSelect fs= new FolderSelect(null, true, "toMerList");
        fs.setVisible(true);
        if(settings.getStringValue("toMerList").length()<3){
            this.labelMergList.setForeground(Color.red);
            this.labelMergList.setText("EMPTY");
            JOptionPane.showMessageDialog(null, "Add Merge List");
        }
        else{
            this.labelMergList.setForeground(Color.blue);
            this.labelMergList.setText("OK");
        }
    }//GEN-LAST:event_btnMergListActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if(checkSettings()){
            MergeEmails me= new MergeEmails(settings.getStringValue("comList"), settings.getStringValue("toMerList"), this.remove, this.mailChimpFile, this.compListMailChimp, labelCountCom, labelCountMer, labelCounter, false);
            Thread thrMe= new Thread(me);
            thrMe.start();
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void radioMailChimpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMailChimpActionPerformed
        if(!this.mailAssigned){
            this.mailChimpFile=true;
            this.mailAssigned=true;
        }
        else if(this.mailAssigned && !this.mailChimpFile){
            this.mailChimpFile=true;
            this.radioMailChimp.setSelected(true);
            this.radioMyCSV.setSelected(false);
        }
        else if(this.mailAssigned && this.mailChimpFile){
            this.mailChimpFile=false;
            this.mailAssigned=false;
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
        }
        if(this.mailAssigned && this.mailChimpFile && this.removeAssigned && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioMailChimpActionPerformed

    private void radioMyCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMyCSVActionPerformed
        if(!this.mailAssigned){
            this.mailChimpFile=false;
            this.mailAssigned=true;
        }
        else if(this.mailAssigned && this.mailChimpFile){
            this.mailChimpFile=false;
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(true);
        }
        else if(this.mailAssigned && !this.mailChimpFile){
            this.mailChimpFile=false;
            this.mailAssigned=false;
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
        }
        if(this.mailAssigned && this.mailChimpFile && this.removeAssigned && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioMyCSVActionPerformed

    private void radioRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRemoveActionPerformed
        if(!this.removeAssigned){
            this.remove= true;
            this.removeAssigned=true;
        }
        else if(this.removeAssigned && !this.remove){
            this.remove= true;
            this.radioRemove.setSelected(true);
            this.radioAdd.setSelected(false);
        }
        else if(this.removeAssigned && this.remove){
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioRemove.setSelected(false);
        }
        if(this.mailAssigned && this.mailChimpFile && this.removeAssigned && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioRemoveActionPerformed

    private void radioAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAddActionPerformed
        if(!this.removeAssigned){
            this.remove= false;
            this.removeAssigned=true;
        }
        else if(this.removeAssigned && !this.remove){
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioRemove.setSelected(false);
        }
        else if(this.removeAssigned && this.remove){
            this.remove= false;
            this.radioAdd.setSelected(true);
            this.radioRemove.setSelected(false);
        }
        if(this.mailAssigned && this.removeAssigned && this.mailChimpFile && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioAddActionPerformed

    private void btnCleanDupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanDupActionPerformed
        if(settings.getStringValue("comList").length()<3){
            this.labelComList.setForeground(Color.red);
            this.labelComList.setText("EMPTY");
            JOptionPane.showMessageDialog(null, "Add Complete List");
        }
        if(!compListAssigned){
            JOptionPane.showMessageDialog(null, "Choose Complete List Type");
        }
        else{
            this.labelComList.setForeground(Color.blue);
            this.labelComList.setText("OK");
            MergeEmails me= new MergeEmails(settings.getStringValue("comList"), settings.getStringValue("toMerList"), this.remove, this.mailChimpFile, this.compListMailChimp, labelCountCom, labelCountMer, labelCounter, true);
            Thread thrMe= new Thread(me);
            thrMe.start();
        }
    }//GEN-LAST:event_btnCleanDupActionPerformed

    private void radioMailChimpComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMailChimpComActionPerformed
        if(!this.compListAssigned){
            this.compListAssigned= true;
            this.compListMailChimp= true;
        }
        else if(this.compListAssigned && !this.compListMailChimp){
            this.compListMailChimp= true;
            this.radioMailChimpCom.setSelected(true);
            this.radioMyCSVcomp.setSelected(false);
        }
        else if(this.compListAssigned && this.compListMailChimp){
            this.compListAssigned= false;
            this.compListMailChimp= false;
            this.radioMailChimpCom.setSelected(false);
            this.radioMyCSVcomp.setSelected(false);
        }
        if(this.mailAssigned && this.mailChimpFile && this.removeAssigned && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioMailChimpComActionPerformed

    private void radioMyCSVcompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMyCSVcompActionPerformed
        if(!this.compListAssigned){
            this.compListAssigned= true;
            this.compListMailChimp= false;
        }
        else if(this.compListAssigned && this.compListMailChimp){
            this.compListMailChimp= false;
            this.radioMailChimpCom.setSelected(false);
            this.radioMyCSVcomp.setSelected(true);
        }
        else if(this.compListAssigned && !this.compListMailChimp){
            this.compListAssigned= false;
            this.compListMailChimp= false;
            this.radioMailChimpCom.setSelected(false);
            this.radioMyCSVcomp.setSelected(false);
        }
        if(this.mailAssigned && this.mailChimpFile && this.removeAssigned && !this.remove && this.compListAssigned && !this.compListMailChimp){
            JOptionPane.showMessageDialog(null, "Cannot Add a My CSV Complete List and Mailchimp File");
            this.mailChimpFile= false;
            this.mailAssigned= false;
            this.remove= false;
            this.removeAssigned= false;
            this.radioAdd.setSelected(false);
            this.radioMailChimp.setSelected(false);
            this.radioMyCSV.setSelected(false);
            this.radioRemove.setSelected(false);
        }
    }//GEN-LAST:event_radioMyCSVcompActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MergeFilesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MergeFilesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MergeFilesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MergeFilesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MergeFilesGUI dialog = new MergeFilesGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCleanDup;
    private javax.swing.JButton btnComList;
    private javax.swing.JButton btnMergList;
    private javax.swing.JButton btnStart;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelComList;
    private javax.swing.JLabel labelComList1;
    private javax.swing.JLabel labelComList2;
    private javax.swing.JLabel labelComList3;
    private javax.swing.JLabel labelComList4;
    private javax.swing.JLabel labelComList5;
    private javax.swing.JLabel labelComList7;
    private javax.swing.JLabel labelComList8;
    private javax.swing.JLabel labelComList9;
    private javax.swing.JLabel labelCountCom;
    private javax.swing.JLabel labelCountMer;
    private javax.swing.JLabel labelCounter;
    private javax.swing.JLabel labelMergList;
    private javax.swing.JRadioButton radioAdd;
    private javax.swing.JRadioButton radioMailChimp;
    private javax.swing.JRadioButton radioMailChimpCom;
    private javax.swing.JRadioButton radioMyCSV;
    private javax.swing.JRadioButton radioMyCSVcomp;
    private javax.swing.JRadioButton radioRemove;
    // End of variables declaration//GEN-END:variables
}
